// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(cuid())
  username String @unique
}

model Student {
  id        String    @id @default(cuid())
  username  String    @unique
  name      String
  surname   String
  birthdate DateTime
  email     String?   @unique
  phone     String?   @unique
  address   String
  img       String?
  bloodType String
  sex       Sex
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  classId String
  classes Class  @relation(fields: [classId], references: [id])

  parentId String
  parents  Parent @relation(fields: [parentId], references: [id])

  gradeId String
  grades  Grade  @relation(fields: [gradeId], references: [id])

  attendances Attendance[]

  results Result[]
}

model Teacher {
  id        String    @id @default(cuid())
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String?   @unique
  address   String
  img       String?
  bloodType String
  sex       Sex
  birthdate DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  subjects Subject[]
  lessons  Lesson[]
  classes  Class[]
}

model Parent {
  id        String    @id @default(cuid())
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String    @unique
  address   String
  img       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  students Student[]
}

model Grade {
  id        String    @id @default(cuid())
  level     Int       @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  students Student[]
  classes  Class[]
}

model Class {
  id        String    @id @default(cuid())
  name      String    @unique
  capacity  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  supervisorId String
  supervisor   Teacher @relation(fields: [supervisorId], references: [id])

  lessons  Lesson[]
  students Student[]

  gradeId String
  grade   Grade  @relation(fields: [gradeId], references: [id])

  events Event[]

  announcements Announcement[]
}

model Subject {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  teachers Teacher[]
  lessons  Lesson[]
}

model Lesson {
  id        String    @id @default(cuid())
  name      String
  day       Day
  startTime DateTime
  endTime   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  subjectId String
  subject   Subject @relation(fields: [subjectId], references: [id])

  classId String
  class   Class  @relation(fields: [classId], references: [id])

  teacherId String
  teacher   Teacher @relation(fields: [teacherId], references: [id])

  exams Exam[]

  assignments Assignment[]

  attendances Attendance[]
}

model Exam {
  id        String   @id @default(cuid())
  title     String
  startTime DateTime
  endTime   DateTime

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  lessonId String
  lessons  Lesson @relation(fields: [lessonId], references: [id])

  results Result[]
}

model Assignment {
  id        String    @id @default(cuid())
  title     String
  startDate DateTime
  dueDate   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  results   Result[]

  lessonId String
  lesson   Lesson @relation(fields: [lessonId], references: [id])
}

model Result {
  id        String    @id @default(cuid())
  score     Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  examId       String?
  exam         Exam?       @relation(fields: [examId], references: [id])
  assignmentId String?
  assignment   Assignment? @relation(fields: [assignmentId], references: [id])
  studentId    String
  student      Student     @relation(fields: [studentId], references: [id])
}

model Attendance {
  id        String    @id @default(cuid())
  date      DateTime
  present   Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  studentId String
  student   Student @relation(fields: [studentId], references: [id])
  lessonId  String
  lesson    Lesson  @relation(fields: [lessonId], references: [id])
}

model Event {
  id          String    @id @default(cuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  classId String?
  classes Class?  @relation(fields: [classId], references: [id])
}

model Announcement {
  id          String    @id @default(cuid())
  title       String
  description String
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  classId String?
  classes Class?  @relation(fields: [classId], references: [id])
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum Sex {
  MALE
  FEMALE
  OTHER
}
